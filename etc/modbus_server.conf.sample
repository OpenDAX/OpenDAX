-- modbus.conf

-- Configuration file for OpenDAX Modbus module

-- Import external configurations
dofile(configdir .. "/log.conf")
--dofile(configdir .. "/common.conf")


-- To configure a port simply create a table and assign the port
-- configuration options to each member.  Then pass that table to
-- the add_port() function.
p = {}

p.name = "sample_server"
p.ipaddress = "127.0.0.1"
p.socket = "TCP"      -- IP socket protocol to use TCP or UDP
p.bindport = 502      -- TCP/UDP Port to use
p.type = "SERVER"       -- SERVER, CLIENT, SLAVE, MASTER
p.protocol = "TCP"      -- RTU, ASCII, TCP

-- This creates the port in the configuration.  It returns the port
-- id which can be used later to add nodes or commands
portid = add_port(p)

-- Adds the register definitions to the given port.  Each server / slave
-- port can represent multiple nodes each with their own set of registers.
-- The tags given here will be created at startup

-- Arguments:
--   port id
--   node / unit id
--   tag name
--   size (in registers or bits)
--   register type [COIL, DISCRETE, HOLDING or INPUT]
add_register(portid, 1, "mb_hreg", 16, HOLDING)
add_register(portid, 1, "mb_ireg", 16, INPUT)
add_register(portid, 1, "mb_creg", 32, COIL)
add_register(portid, 1, "mb_dreg", 32, DISCRETE)

-- Multiple nodes can be created and the same tags or different
-- tags can be used
--add_register(portid, 2, "mb_hreg", 16, HOLDING)
--add_register(portid, 2, "mb_ireg", 16, INPUT)
--add_register(portid, 2, "mb_creg", 32, COIL)
--add_register(portid, 2, "mb_dreg", 32, DISCRETE)

-- Using a node id of zero will cause the server/slave to answer for
-- all node requests
--add_register(portid, 0, "mb_hreg", 16, HOLDING)
--add_register(portid, 0, "mb_ireg", 16, INPUT)
--add_register(portid, 0, "mb_creg", 32, COIL)
--add_register(portid, 0, "mb_dreg", 32, DISCRETE)
